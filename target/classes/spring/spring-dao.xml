<?xml version="1.0" encoding="GBK"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    <!--配置整合mybatis过程-->
    <!--1：配置数据库相关的参数
        Spring配置文件中properties的属性->${url}形式获得-->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!--2.数据库连接池配置-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>

        <!--c3p0私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后自动提交未提交事务-->
        <property name="autoCommitOnClose" value="false"/>
        <!--达到最大连接数量后尝试获取的等待超时时间-->
        <property name="checkoutTimeout" value="2000"/>
        <!--尝试获取连接的重试次数，如果仍那么不到连接则抛出异常-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--3.配置SqlSessionFactory对象(MyBatis整合Spring)-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置MyBatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-cofig.xml"/>
        <!--扫描entity包，使用别名 com.seckill.entity.Seckill->Seckill(多个包value属性用分号；隔开)-->
        <property name="typeAliasesPackage" value="com.seckill.entity"/>
        <!--扫描sql配置文件，Mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:Mapper/*.xml"/>
    </bean>

    <!--4.配置扫描Dao接口包，动态实现Dao接口，并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory(采用BeanName原因是防止启动后扫描配置文件，提前初始化SqlSessionFactory，导致property文件还未加载，dataSource不存在)-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出扫描Dao接口包-->
        <property name="basePackage" value="com.seckill.dao"/>
    </bean>

    <!--RedisDao-->
    <bean class="com.seckill.dao.cache.RedisDao"  id="redisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>